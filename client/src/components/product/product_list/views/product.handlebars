<div class="featured-cars-section">
    <div class="product-container">
        <div class="product-content">
            <h2 class="feature-cars__title display-4 text-dark text-center">
                Featured <span class="text-navy">Watch</span>
            </h2>
            <h3>
                
            </h3>
            <!-- Sidebar -->

            <div class="product__wrapper">

                <div class="sidebar">
                    <h4 class="text-dark">Search</h4>
                    <div class="mb-3 d-flex align-items-center">
                        <input id="search__bar__product" type="text" class="form-control" placeholder="Search by name"
                            value="{{searchValue}}">
                        <button class="custom_button" onclick="javascript:handleSearch()">
                            <i class="fas fa-search"></i> <!-- Icon search -->
                        </button>
                    </div>
                    <h5 class="mt-4">Brand</h5>
                    <div id="brand-filter" class="filter-area btn-group-toggle" data-toggle="buttons">
                        {{!-- {{#each brands}}
                        <input type="checkbox" id="checkbox_{{this}}" {{#if (includes this
                            ../selectedBrands)}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="checkbox_{{this}}">{{this}}</label>
                        {{/each}} --}}

                        {{!-- <input type="checkbox" id="checkbox_bmw" {{#if (includes "bmw"
                            selectedBrands)}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="checkbox_bmw">BMW</label>

                        <input type="checkbox" id="checkbox_ferrari" {{#if (includes "ferrari"
                            selectedBrands)}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="checkbox_ferrari">Ferrari</label>

                        <input type="checkbox" id="checkbox_audi" {{#if (includes "audi"
                            selectedBrands)}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="checkbox_audi">Audi</label> --}}
                    </div>

                    <h5 class="mt-4">Price</h5>
                    <input id="price-filter" type="range" class="form-range" min="1000" max="50000"
                        value="{{selectedPrice}}">

                    <h5 class="mt-4">Model</h5>
                    <div id="model-filter" class="filter-area btn-group-toggle" data-toggle="buttons">
                        {{!-- {{#each models}}

                        <input type="checkbox" id="checkbox_{{this}}" {{#if (includes this
                            ../selectedModels)}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="checkbox_{{this}}">{{this}}</label>
                        {{/each}} --}}

                        {{!-- <input type="checkbox" id="checkbox_sedan" {{#if (includes "sedan"
                            selectedBrands)}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="checkbox_sedan">Sedan</label>

                        <input type="checkbox" id="checkbox_suv" {{#if (includes "suv" selectedBrands)}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="checkbox_suv">SUV</label>

                        <input type="checkbox" id="checkbox_van" {{#if (includes "van" selectedBrands)}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="checkbox_van">Van</label> --}}
                    </div>
                    <h5 class="mt-4">Sort</h5>
                    {{!-- <div id="sort-filter" class="filter-area btn-group-toggle" data-toggle="buttons">
                        <input type="radio" name="sort" id="sort_price_asc" {{#if (eqString selectedSort "price_asc"
                            )}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="sort_price_asc">Price ↑</label>

                        <input type="radio" name="sort" id="sort_price_desc" {{#if (eqString selectedSort "price_desc"
                            )}}checked{{/if}}>
                        <label class="btn btn-outline-warning" for="sort_price_desc">Price ↓</label>

                    </div> --}}
                    <div id="sort-filter" class="filter-area custom-radio-group">
                        <input type="radio" name="sort" id="sort_price_asc" class="custom-radio" {{#if (eqString selectedSort "price_asc")}}checked{{/if}}>
                        <label class="custom-label" for="sort_price_asc">Price ↑</label>

                        <input type="radio" name="sort" id="sort_price_desc" class="custom-radio" {{#if (eqString selectedSort "price_desc")}}checked{{/if}}>
                        <label class="custom-label" for="sort_price_desc">Price ↓</label>
                    </div>

                    <div class="d-flex justify-content-center mt-4">
                        <button id="button_filter" class="btn btn-warning" onclick="javascript:filterProducts()">
                            <i class="fas fa-filter"></i> <!-- Icon filter -->
                        </button>
                    </div>
                </div>

                <!-- Featured Cars -->
                <div class="featured-cars">

                    <hr class="newest-cars-divider">

                    <div id="product-page">
                        <div id="pagination">
                            <button class="custom_button" id="prev-btn" disabled>Previous</button>
                            <span id="page-info"></span>
                            <button class="custom_button" id="next-btn">Next</button>
                        </div>
                        <div class="cars-list">
                            <div id="loading-spinner" class="spinner hidden">
                                <div class="spinner-inner"></div>
                            </div>
                            <div id="items-container" class="cars-list">
                                {{#each products}}
                                <div class="card">
                                    <div class="card_img">
                                        <div class="card_img_fake1"></div>
                                        <a href="/product/{{this._id}}">
                                            <img src="data:image/png;base64,{{this.productMainImage}}" class="card-img-top"
                                                alt="{{this.productName}}">
                                        </a>
                                    </div>

                                    <div class="card_content">
                                        <div class="card_price">
                                            <div class="card_price_fake">
                                                <div class="card_price_value">
                                                    {{formatCurrency this.productPrice}}
                                                </div>
                                            </div>
                                        </div>

                                        <div class="card_detail">
                                            <div class="card_title">
                                                <a href="/product/{{this._id}}">
                                                    <h5 class="card-title">{{this.productName}}</h5>
                                                </a>
                                            </div>
                                            <div class="card_description">
                                                <p>{{this.productDescription}}</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                {{/each}}
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


{{!--
<script>
    let currentPage = 1;  // Initial page number
    let limit = 5;  // Number of products per page

    function filterProducts() {

    }

    // Function to update the product list and pagination controls
    function loadProducts() {
        console.log("loadProducts");
        // Make an AJAX request to get the products for the current page
        fetch(`http://localhost:3000/product/`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                page: currentPage,
                limit: limit
            })
        })
            .then(response => response.json())
            .then(data => {
                // Extract current page, total pages, and items from the response
                const { currentPage, totalPages, item } = data;

                // Update the products displayed on the page
                const itemsContainer = document.getElementById('items-container');
                itemsContainer.innerHTML = '';  // Clear the current content

                // Loop through the items and display each product
                item.forEach(product => {
                    const productElement = createProductElement(product);
                    itemsContainer.appendChild(productElement);
                });

                // Update the page info and pagination buttons
                document.getElementById('page-info').textContent = `Page ${currentPage} of ${totalPages}`;

                // Enable/disable the pagination buttons based on the current page
                document.getElementById('prev-btn').disabled = currentPage === 1;
                document.getElementById('next-btn').disabled = currentPage === totalPages;

                // handle the url
                let url = new URL(window.location.href);
                url.searchParams.set('page', currentPage);
                window.history.pushState({}, '', url);
            })
            .catch(error => {
                console.error('Error loading products:', error);
            });
    }

    // Function to create the product card HTML dynamically
    function createProductElement(product) {
        const card = document.createElement('div');
        card.classList.add('card');

        // Product image and link
        const imageContainer = document.createElement('div');
        imageContainer.classList.add('card_img');
        const imageFake = document.createElement('div');
        imageFake.classList.add('card_img_fake1');
        imageContainer.appendChild(imageFake);

        const imageLink = document.createElement('a');
        imageLink.href = `/product/${product._id}`;
        const img = document.createElement('img');
        img.src = `data:image/png;base64,${product.image}`;
        img.classList.add('card-img-top');
        img.alt = product.name;
        imageLink.appendChild(img);
        imageContainer.appendChild(imageLink);
        card.appendChild(imageContainer);

        // Product details (price, name, description)
        const content = document.createElement('div');
        content.classList.add('card_content');

        const priceContainer = document.createElement('div');
        priceContainer.classList.add('card_price');
        const priceFake = document.createElement('div');
        priceFake.classList.add('card_price_fake');
        const priceValue = document.createElement('div');
        priceValue.classList.add('card_price_value');
        priceValue.textContent = product.price;
        priceFake.appendChild(priceValue);
        priceContainer.appendChild(priceFake);
        content.appendChild(priceContainer);

        const details = document.createElement('div');
        details.classList.add('card_detail');

        const titleContainer = document.createElement('div');
        titleContainer.classList.add('card_title');
        const titleLink = document.createElement('a');
        titleLink.href = `/product/${product._id}`;
        const title = document.createElement('h5');
        title.classList.add('card-title');
        title.textContent = product.name;
        titleLink.appendChild(title);
        titleContainer.appendChild(titleLink);
        details.appendChild(titleContainer);

        const description = document.createElement('div');
        description.classList.add('card_description');
        const descriptionText = document.createElement('p');
        descriptionText.textContent = product.description;
        description.appendChild(descriptionText);
        details.appendChild(description);

        content.appendChild(details);
        card.appendChild(content);

        return card;
    }

    // Set up event listeners for the pagination buttons
    document.getElementById('prev-btn').addEventListener('click', () => {
        if (currentPage > 1) {
            currentPage--;
            loadProducts();
        }
    });

    document.getElementById('next-btn').addEventListener('click', () => {
        currentPage++;
        loadProducts();
    });

    // Initially load the first page of products
    loadProducts();
</script>
--}}

